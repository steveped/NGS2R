% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/cutadapt.R
\name{cutadapt}
\alias{cutadapt}
\alias{cutadaptPaired}
\title{A wrapper for the bash shell command cutadapt.}
\usage{
cutadapt(inFile, adapters, outDir, type = "-a", args = "-q 20 -m 20",
  exec = "~/.local/bin/cutadapt")

cutadaptPaired(inFile, adapters, outDir, type = "-a", args = "-q 20 -m 20",
  p1 = "R1", p2 = "R2", exec = "~/.local/bin/cutadapt")
}
\arguments{
\item{inFile}{the first file in the read pair. Currently needs to contain the pattern as defined by p1 in it's name. The full path is also required}

\item{adapters}{for \code{cutadapt} this must be a character vector with the adapter sequence(s).
For \code{cutadaptPaired}, this must be a list with two components, forward & reverse, in that order.
Each will be applied to the appropriate read pair.}

\item{outDir}{the output directory for writing the trimmed fastq file. The names wil be automatically the same as the original file}

\item{type}{the type of adapter binding. Currently accepts only "-a", "-g" or "-b". Note that the prefix "-" must be included.
For the function \code{cutadaptPaired}, a different type of adapter can be specified for each set of reads.}

\item{args}{the remaining arguments to the function cutadapt. Defaults to a quality threshold of 20 (-q 20) and a minimum length of 20 (-m 20)}

\item{exec}{the path to the executable. This may vary from system to system}

\item{p1}{the pattern specific to the name of the first read inthe pair}

\item{p2}{the pattern specific to the name of the second read in the pair}
}
\value{
If succesfully executed the log file from each pass of cutadapt will be written to the slots \code{forward} and \code{reverse}
}
\description{
Takes an individual fastq file then finds it's mate to run as paired end files.
}
\details{
This is a specific wrapper which currently gives you no choice about renaming any output files.
 Trimmed Files will be written to the specified directory with identical names to the source files.
 As the approach required by \code{cutadapt} for paired ends is to run once on each set of reads,
 this wrapper will write to a folder \code{temp} as a subdirectory of the output directory \code{outDir}.
 The temporary files created will be deleted, but the directory will not.
 This is to enable easier upscaling to parallel implementations.

 To run in parallel see the examples section

 Note also that the log file contained in the output can be written to the R \code{stdout} in a pretty format using the command \code{cat}.
 For example, some important output from the forward set of reads could be printed using \code{cat(log$forward[1:13], sep="\n")}.

 For the cutadapt documentation, please visit \url{http://cutadapt.readthedocs.org/en/latest/}
}
\examples{
\dontrun{
# An example of how to run this in parallel across multiple files
adaptSeq <- list(forward = "AGATCGGAAGAGCGGTTC", reverse = "AGATCGGAAGAGCGTCGT")
fastqDir <- getwd() # Or wherever the fastq files are
outDir <- file.path("trimmed_fastq") # Where you want to write the files
R1files <- list.files(fastqDir, pattern="R1") # Get the vector of Read1 files

library(snow)
cl <- makeSOCKcluster(rep("localhost", 4)) # Make an internal cluster with 4 nodes
clusterExport(cl, c("adaptSeq", "outDir")) # export the adapter sequences & the output directory
cutadaptLog <- clusterApply(cl, R1files, cutadaptPaired, adapters=adaptSeq, outDir=outDir) # Run in parallel
stopCluster(cl)
}
}
\author{
Steve Pederson <stephen.pederson@adelaide.edu.au>
}
\seealso{
\code{\link{cat}}, \code{\link{system}}
}

